cmake_minimum_required(VERSION 3.10)
project(pfederc_test)

include(CTest)
enable_testing()

macro(build_test name)
  add_executable("${name}"
	  "${pfederc_test_SOURCE_DIR}/${name}.cpp")
  target_link_libraries("${name}" ${PFEDERC_LIBRARIES})
endmacro()

macro(status_test name)
	build_test("${name}")
	add_test("${name}" "${name}")
endmacro()

macro(match_test testname name args match)
  add_test("${testname}" "${name}" ${args})
  set_property(TEST "${testname}" PROPERTY PASS_REGULAR_EXPRESSION "${match}")
endmacro()

status_test(tokenidtostr)

build_test(tokenid)
# Identifiers
# good
match_test(tokenid_id00 tokenid "variable" "^TOK_ID\n$")
match_test(tokenid_id01 tokenid "_Variable" "^TOK_ID\n$")
match_test(tokenid_id02 tokenid "_Var0123456789" "^TOK_ID\n$")
match_test(tokenid_id03 tokenid "snake_cases_used" "^TOK_ID\n$")
match_test(tokenid_id04 tokenid "ABCDEFGHIJKLMNOPQRSTUVWXYZ" "^TOK_ID\n$")
match_test(tokenid_id05 tokenid "abcdefghijklmnopqrtstuvwyz" "^TOK_ID\n$")
## bad
match_test(tokenid_id06 tokenid "__" "^TOK_ERR\n")
match_test(tokenid_id07 tokenid "_0" "^TOK_ERR\n")
# Keywords
match_test(tokenid_kw00 tokenid "func" "^TOK_KW_FN\n$")
match_test(tokenid_kw01 tokenid "mod" "^TOK_KW_MOD\n$")
match_test(tokenid_kw02 tokenid "class" "^TOK_KW_CLASS\n$")
match_test(tokenid_kw03 tokenid "enum" "^TOK_KW_ENUM\n$")
match_test(tokenid_kw04 tokenid "trait" "^TOK_KW_TRAIT\n$")
match_test(tokenid_kw05 tokenid "type" "^TOK_KW_TYPE\n$")
match_test(tokenid_kw06 tokenid "return" "^TOK_KW_RET\n$")
match_test(tokenid_kw07 tokenid "use" "^TOK_KW_USE\n$")
match_test(tokenid_kw08 tokenid "if" "^TOK_KW_IF\n$")
match_test(tokenid_kw09 tokenid "else" "^TOK_KW_ELSE\n$")
match_test(tokenid_kw10 tokenid "match" "^TOK_KW_MATCH\n$")
match_test(tokenid_kw11 tokenid "switch" "^TOK_KW_SWITCH\n$")
match_test(tokenid_kw12 tokenid "for" "^TOK_KW_FOR\n$")
match_test(tokenid_kw13 tokenid "do" "^TOK_KW_DO\n$")
match_test(tokenid_kw14 tokenid "continue" "^TOK_KW_CTN\n$")
match_test(tokenid_kw15 tokenid "break" "^TOK_KW_BRK\n$")
match_test(tokenid_kw16 tokenid "include" "^TOK_KW_INC\n$")
match_test(tokenid_kw17 tokenid "import" "^TOK_KW_IMPORT\n$")
match_test(tokenid_kw18 tokenid "safe" "^TOK_KW_SAFE\n$")
match_test(tokenid_kw19 tokenid "True" "^TOK_KW_TRUE\n$")
match_test(tokenid_kw20 tokenid "False" "^TOK_KW_FALSE\n$")
# Operators
match_test(tokenid_op00 tokenid "," "^TOK_OP_COMMA\n$")
match_test(tokenid_op01 tokenid ":=" "^TOK_OP_ASG_DCL\n$")
match_test(tokenid_op02 tokenid "&=" "^TOK_OP_ASG_AND\n$")
match_test(tokenid_op03 tokenid "^=" "^TOK_OP_ASG_XOR\n$")
match_test(tokenid_op04 tokenid "|=" "^TOK_OP_ASG_OR\n$")
match_test(tokenid_op05 tokenid "<<=" "^TOK_OP_ASG_LSH\n$")
match_test(tokenid_op06 tokenid ">>=" "^TOK_OP_ASG_RSH\n$")
match_test(tokenid_op07 tokenid "%=" "^TOK_OP_ASG_MOD\n$")
match_test(tokenid_op07 tokenid "/=" "^TOK_OP_ASG_DIV\n$")
match_test(tokenid_op07 tokenid "*=" "^TOK_OP_ASG_MUL\n$")
match_test(tokenid_op07 tokenid "-=" "^TOK_OP_ASG_SUB\n$")
match_test(tokenid_op07 tokenid "+=" "^TOK_OP_ASG_ADD\n$")
match_test(tokenid_op08 tokenid "=" "^TOK_OP_ASG\n$")
match_test(tokenid_op09 tokenid "null" "^TOK_OP_NULL\n$")
match_test(tokenid_op10 tokenid "||" "^TOK_OP_LOR\n$")
match_test(tokenid_op11 tokenid "&&" "^TOK_OP_LAND\n$")
match_test(tokenid_op12 tokenid "<>" "^TOK_OP_ARG\n$")
match_test(tokenid_op13 tokenid "|" "^TOK_OP_BOR\n$")
match_test(tokenid_op14 tokenid "^" "^TOK_OP_BXOR\n$")
match_test(tokenid_op15 tokenid "&" "^TOK_OP_BAND\n$")
match_test(tokenid_op16 tokenid "==" "^TOK_OP_EQ\n$")
match_test(tokenid_op17 tokenid "!=" "^TOK_OP_NQ\n$")
match_test(tokenid_op18 tokenid "<" "^TOK_OP_LT\n$")
match_test(tokenid_op19 tokenid "<=" "^TOK_OP_LEQ\n$")
match_test(tokenid_op20 tokenid ">" "^TOK_OP_GT\n$")
match_test(tokenid_op21 tokenid ">=" "^TOK_OP_GEQ\n$")
match_test(tokenid_op22 tokenid "<<" "^TOK_OP_LSH\n$")
match_test(tokenid_op23 tokenid ">>" "^TOK_OP_RSH\n$")
match_test(tokenid_op24 tokenid "+" "^TOK_OP_ADD\n$")
match_test(tokenid_op25 tokenid "-" "^TOK_OP_SUB\n$")
match_test(tokenid_op26 tokenid "%" "^TOK_OP_MOD\n$")
match_test(tokenid_op27 tokenid "*" "^TOK_OP_MUL\n$")
match_test(tokenid_op28 tokenid "/" "^TOK_OP_DIV\n$")
match_test(tokenid_op29 tokenid ":" "^TOK_OP_DCL\n$")
match_test(tokenid_op30 tokenid "++" "^TOK_OP_INC\n$")
match_test(tokenid_op31 tokenid "--" "^TOK_OP_DEC\n$")
match_test(tokenid_op32 tokenid "!" "^TOK_OP_LN\n$")
match_test(tokenid_op33 tokenid "~" "^TOK_OP_BN\n$")
match_test(tokenid_op34 tokenid "." "^TOK_OP_MEM\n$")
match_test(tokenid_op35 tokenid "->" "^TOK_OP_DMEM\n$")
